# Makefile.in generated by automake 1.11.1 from Makefile.am.
# libavcodec/cell/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



VPATH = ../../../h264dec/libavcodec/cell
pkgdatadir = $(datadir)/h264_mt
pkgincludedir = $(includedir)/h264_mt
pkglibdir = $(libdir)/h264_mt
pkglibexecdir = $(libexecdir)/h264_mt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-mingw32
host_triplet = i686-pc-mingw32
bin_PROGRAMS = $(top_builddir)/spe_mbd$(EXEEXT) \
	$(top_builddir)/spe_ed$(EXEEXT)
subdir = libavcodec/cell
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am___top_builddir__spe_ed_OBJECTS =  \
	__top_builddir__spe_ed-spe_ed.$(OBJEXT) \
	__top_builddir__spe_ed-h264_cabac_spu.$(OBJEXT) \
	__top_builddir__spe_ed-cabac_spu.$(OBJEXT) \
	__top_builddir__spe_ed-h264_direct_spu.$(OBJEXT) \
	__top_builddir__spe_ed-h264_dma.$(OBJEXT)
__top_builddir__spe_ed_OBJECTS = $(am___top_builddir__spe_ed_OBJECTS)
__top_builddir__spe_ed_DEPENDENCIES =  \
	/opt/cell/sdk/usr/spu/lib/libsync.a
am__dirstamp = $(am__leading_dot)dirstamp
am___top_builddir__spe_mbd_OBJECTS =  \
	__top_builddir__spe_mbd-spe_mbd.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_decode_mb_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_intra_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-dsputil_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_idct_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_mc_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_deblock_spu.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_dma.$(OBJEXT) \
	__top_builddir__spe_mbd-h264_tables.$(OBJEXT)
__top_builddir__spe_mbd_OBJECTS =  \
	$(am___top_builddir__spe_mbd_OBJECTS)
__top_builddir__spe_mbd_DEPENDENCIES =  \
	/opt/cell/sdk/usr/spu/lib/libsync.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(__top_builddir__spe_ed_SOURCES) \
	$(__top_builddir__spe_mbd_SOURCES)
DIST_SOURCES = $(__top_builddir__spe_ed_SOURCES) \
	$(__top_builddir__spe_mbd_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run tar
ARCH_SUBDIR = 
AUTOCONF = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run autoconf
AUTOHEADER = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run autoheader
AUTOMAKE = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run automake-1.11
AWK = gawk
CC = spu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = .exe
GREP = /bin/grep
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = h264_mt
PACKAGE_BUGREPORT = cchi@cs.tu-berlin.de
PACKAGE_NAME = h264_mt
PACKAGE_STRING = h264_mt 0.1
PACKAGE_TARNAME = h264_mt
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
abs_builddir = /home/biaowang/ffmpeg_smp/build/libavcodec/cell
abs_srcdir = /home/biaowang/ffmpeg_smp/build/../h264dec/libavcodec/cell
abs_top_builddir = /home/biaowang/ffmpeg_smp/build
abs_top_srcdir = /home/biaowang/ffmpeg_smp/build/../h264dec
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-mingw32
build_alias = 
build_cpu = i686
build_os = mingw32
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-mingw32
host_alias = 
host_cpu = i686
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/biaowang/ffmpeg_smp/h264dec/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../h264dec/libavcodec/cell
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../../../h264dec
AM_CFLAGS = -std=gnu99
__top_builddir__spe_mbd_SOURCES = spe_mbd.c 		\
							h264_decode_mb_spu.c 	\
							h264_intra_spu.c 		\
							dsputil_spu.c 			\
							h264_idct_spu.c			\
							h264_mc_spu.c 			\
							h264_deblock_spu.c		\
							h264_dma.c				\
							h264_tables.c 			

__top_builddir__spe_mbd_LDADD = /opt/cell/sdk/usr/spu/lib/libsync.a
__top_builddir__spe_mbd_CPPFLAGS = -I$(top_srcdir) -I /opt/cell/sdk/usr/spu/include
__top_builddir__spe_ed_SOURCES = spe_ed.c 		\
							h264_cabac_spu.c 	\
							cabac_spu.c 		\
							h264_direct_spu.c   \
							h264_dma.c			

__top_builddir__spe_ed_LDADD = /opt/cell/sdk/usr/spu/lib/libsync.a
__top_builddir__spe_ed_CPPFLAGS = -I$(top_srcdir) -I /opt/cell/sdk/usr/spu/include
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign libavcodec/cell/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign libavcodec/cell/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
$(top_builddir)/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)
	@: > $(top_builddir)/$(am__dirstamp)
$(top_builddir)/spe_ed$(EXEEXT): $(__top_builddir__spe_ed_OBJECTS) $(__top_builddir__spe_ed_DEPENDENCIES) $(top_builddir)/$(am__dirstamp)
	@rm -f $(top_builddir)/spe_ed$(EXEEXT)
	$(LINK) $(__top_builddir__spe_ed_OBJECTS) $(__top_builddir__spe_ed_LDADD) $(LIBS)
$(top_builddir)/spe_mbd$(EXEEXT): $(__top_builddir__spe_mbd_OBJECTS) $(__top_builddir__spe_mbd_DEPENDENCIES) $(top_builddir)/$(am__dirstamp)
	@rm -f $(top_builddir)/spe_mbd$(EXEEXT)
	$(LINK) $(__top_builddir__spe_mbd_OBJECTS) $(__top_builddir__spe_mbd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_ed-h264_dma.Po
include ./$(DEPDIR)/__top_builddir__spe_ed-spe_ed.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Po
include ./$(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

__top_builddir__spe_ed-spe_ed.o: spe_ed.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-spe_ed.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Tpo -c -o __top_builddir__spe_ed-spe_ed.o `test -f 'spe_ed.c' || echo '$(srcdir)/'`spe_ed.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Tpo $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Po
#	source='spe_ed.c' object='__top_builddir__spe_ed-spe_ed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-spe_ed.o `test -f 'spe_ed.c' || echo '$(srcdir)/'`spe_ed.c

__top_builddir__spe_ed-spe_ed.obj: spe_ed.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-spe_ed.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Tpo -c -o __top_builddir__spe_ed-spe_ed.obj `if test -f 'spe_ed.c'; then $(CYGPATH_W) 'spe_ed.c'; else $(CYGPATH_W) '$(srcdir)/spe_ed.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Tpo $(DEPDIR)/__top_builddir__spe_ed-spe_ed.Po
#	source='spe_ed.c' object='__top_builddir__spe_ed-spe_ed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-spe_ed.obj `if test -f 'spe_ed.c'; then $(CYGPATH_W) 'spe_ed.c'; else $(CYGPATH_W) '$(srcdir)/spe_ed.c'; fi`

__top_builddir__spe_ed-h264_cabac_spu.o: h264_cabac_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_cabac_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Tpo -c -o __top_builddir__spe_ed-h264_cabac_spu.o `test -f 'h264_cabac_spu.c' || echo '$(srcdir)/'`h264_cabac_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Po
#	source='h264_cabac_spu.c' object='__top_builddir__spe_ed-h264_cabac_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_cabac_spu.o `test -f 'h264_cabac_spu.c' || echo '$(srcdir)/'`h264_cabac_spu.c

__top_builddir__spe_ed-h264_cabac_spu.obj: h264_cabac_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_cabac_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Tpo -c -o __top_builddir__spe_ed-h264_cabac_spu.obj `if test -f 'h264_cabac_spu.c'; then $(CYGPATH_W) 'h264_cabac_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_cabac_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_cabac_spu.Po
#	source='h264_cabac_spu.c' object='__top_builddir__spe_ed-h264_cabac_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_cabac_spu.obj `if test -f 'h264_cabac_spu.c'; then $(CYGPATH_W) 'h264_cabac_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_cabac_spu.c'; fi`

__top_builddir__spe_ed-cabac_spu.o: cabac_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-cabac_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Tpo -c -o __top_builddir__spe_ed-cabac_spu.o `test -f 'cabac_spu.c' || echo '$(srcdir)/'`cabac_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Po
#	source='cabac_spu.c' object='__top_builddir__spe_ed-cabac_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-cabac_spu.o `test -f 'cabac_spu.c' || echo '$(srcdir)/'`cabac_spu.c

__top_builddir__spe_ed-cabac_spu.obj: cabac_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-cabac_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Tpo -c -o __top_builddir__spe_ed-cabac_spu.obj `if test -f 'cabac_spu.c'; then $(CYGPATH_W) 'cabac_spu.c'; else $(CYGPATH_W) '$(srcdir)/cabac_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-cabac_spu.Po
#	source='cabac_spu.c' object='__top_builddir__spe_ed-cabac_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-cabac_spu.obj `if test -f 'cabac_spu.c'; then $(CYGPATH_W) 'cabac_spu.c'; else $(CYGPATH_W) '$(srcdir)/cabac_spu.c'; fi`

__top_builddir__spe_ed-h264_direct_spu.o: h264_direct_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_direct_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Tpo -c -o __top_builddir__spe_ed-h264_direct_spu.o `test -f 'h264_direct_spu.c' || echo '$(srcdir)/'`h264_direct_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Po
#	source='h264_direct_spu.c' object='__top_builddir__spe_ed-h264_direct_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_direct_spu.o `test -f 'h264_direct_spu.c' || echo '$(srcdir)/'`h264_direct_spu.c

__top_builddir__spe_ed-h264_direct_spu.obj: h264_direct_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_direct_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Tpo -c -o __top_builddir__spe_ed-h264_direct_spu.obj `if test -f 'h264_direct_spu.c'; then $(CYGPATH_W) 'h264_direct_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_direct_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_direct_spu.Po
#	source='h264_direct_spu.c' object='__top_builddir__spe_ed-h264_direct_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_direct_spu.obj `if test -f 'h264_direct_spu.c'; then $(CYGPATH_W) 'h264_direct_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_direct_spu.c'; fi`

__top_builddir__spe_ed-h264_dma.o: h264_dma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_dma.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Tpo -c -o __top_builddir__spe_ed-h264_dma.o `test -f 'h264_dma.c' || echo '$(srcdir)/'`h264_dma.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Po
#	source='h264_dma.c' object='__top_builddir__spe_ed-h264_dma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_dma.o `test -f 'h264_dma.c' || echo '$(srcdir)/'`h264_dma.c

__top_builddir__spe_ed-h264_dma.obj: h264_dma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_ed-h264_dma.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Tpo -c -o __top_builddir__spe_ed-h264_dma.obj `if test -f 'h264_dma.c'; then $(CYGPATH_W) 'h264_dma.c'; else $(CYGPATH_W) '$(srcdir)/h264_dma.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Tpo $(DEPDIR)/__top_builddir__spe_ed-h264_dma.Po
#	source='h264_dma.c' object='__top_builddir__spe_ed-h264_dma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_ed_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_ed-h264_dma.obj `if test -f 'h264_dma.c'; then $(CYGPATH_W) 'h264_dma.c'; else $(CYGPATH_W) '$(srcdir)/h264_dma.c'; fi`

__top_builddir__spe_mbd-spe_mbd.o: spe_mbd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-spe_mbd.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Tpo -c -o __top_builddir__spe_mbd-spe_mbd.o `test -f 'spe_mbd.c' || echo '$(srcdir)/'`spe_mbd.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Tpo $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Po
#	source='spe_mbd.c' object='__top_builddir__spe_mbd-spe_mbd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-spe_mbd.o `test -f 'spe_mbd.c' || echo '$(srcdir)/'`spe_mbd.c

__top_builddir__spe_mbd-spe_mbd.obj: spe_mbd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-spe_mbd.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Tpo -c -o __top_builddir__spe_mbd-spe_mbd.obj `if test -f 'spe_mbd.c'; then $(CYGPATH_W) 'spe_mbd.c'; else $(CYGPATH_W) '$(srcdir)/spe_mbd.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Tpo $(DEPDIR)/__top_builddir__spe_mbd-spe_mbd.Po
#	source='spe_mbd.c' object='__top_builddir__spe_mbd-spe_mbd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-spe_mbd.obj `if test -f 'spe_mbd.c'; then $(CYGPATH_W) 'spe_mbd.c'; else $(CYGPATH_W) '$(srcdir)/spe_mbd.c'; fi`

__top_builddir__spe_mbd-h264_decode_mb_spu.o: h264_decode_mb_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_decode_mb_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Tpo -c -o __top_builddir__spe_mbd-h264_decode_mb_spu.o `test -f 'h264_decode_mb_spu.c' || echo '$(srcdir)/'`h264_decode_mb_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Po
#	source='h264_decode_mb_spu.c' object='__top_builddir__spe_mbd-h264_decode_mb_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_decode_mb_spu.o `test -f 'h264_decode_mb_spu.c' || echo '$(srcdir)/'`h264_decode_mb_spu.c

__top_builddir__spe_mbd-h264_decode_mb_spu.obj: h264_decode_mb_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_decode_mb_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Tpo -c -o __top_builddir__spe_mbd-h264_decode_mb_spu.obj `if test -f 'h264_decode_mb_spu.c'; then $(CYGPATH_W) 'h264_decode_mb_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_decode_mb_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_decode_mb_spu.Po
#	source='h264_decode_mb_spu.c' object='__top_builddir__spe_mbd-h264_decode_mb_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_decode_mb_spu.obj `if test -f 'h264_decode_mb_spu.c'; then $(CYGPATH_W) 'h264_decode_mb_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_decode_mb_spu.c'; fi`

__top_builddir__spe_mbd-h264_intra_spu.o: h264_intra_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_intra_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Tpo -c -o __top_builddir__spe_mbd-h264_intra_spu.o `test -f 'h264_intra_spu.c' || echo '$(srcdir)/'`h264_intra_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Po
#	source='h264_intra_spu.c' object='__top_builddir__spe_mbd-h264_intra_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_intra_spu.o `test -f 'h264_intra_spu.c' || echo '$(srcdir)/'`h264_intra_spu.c

__top_builddir__spe_mbd-h264_intra_spu.obj: h264_intra_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_intra_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Tpo -c -o __top_builddir__spe_mbd-h264_intra_spu.obj `if test -f 'h264_intra_spu.c'; then $(CYGPATH_W) 'h264_intra_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_intra_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_intra_spu.Po
#	source='h264_intra_spu.c' object='__top_builddir__spe_mbd-h264_intra_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_intra_spu.obj `if test -f 'h264_intra_spu.c'; then $(CYGPATH_W) 'h264_intra_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_intra_spu.c'; fi`

__top_builddir__spe_mbd-dsputil_spu.o: dsputil_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-dsputil_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Tpo -c -o __top_builddir__spe_mbd-dsputil_spu.o `test -f 'dsputil_spu.c' || echo '$(srcdir)/'`dsputil_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Po
#	source='dsputil_spu.c' object='__top_builddir__spe_mbd-dsputil_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-dsputil_spu.o `test -f 'dsputil_spu.c' || echo '$(srcdir)/'`dsputil_spu.c

__top_builddir__spe_mbd-dsputil_spu.obj: dsputil_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-dsputil_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Tpo -c -o __top_builddir__spe_mbd-dsputil_spu.obj `if test -f 'dsputil_spu.c'; then $(CYGPATH_W) 'dsputil_spu.c'; else $(CYGPATH_W) '$(srcdir)/dsputil_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-dsputil_spu.Po
#	source='dsputil_spu.c' object='__top_builddir__spe_mbd-dsputil_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-dsputil_spu.obj `if test -f 'dsputil_spu.c'; then $(CYGPATH_W) 'dsputil_spu.c'; else $(CYGPATH_W) '$(srcdir)/dsputil_spu.c'; fi`

__top_builddir__spe_mbd-h264_idct_spu.o: h264_idct_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_idct_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Tpo -c -o __top_builddir__spe_mbd-h264_idct_spu.o `test -f 'h264_idct_spu.c' || echo '$(srcdir)/'`h264_idct_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Po
#	source='h264_idct_spu.c' object='__top_builddir__spe_mbd-h264_idct_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_idct_spu.o `test -f 'h264_idct_spu.c' || echo '$(srcdir)/'`h264_idct_spu.c

__top_builddir__spe_mbd-h264_idct_spu.obj: h264_idct_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_idct_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Tpo -c -o __top_builddir__spe_mbd-h264_idct_spu.obj `if test -f 'h264_idct_spu.c'; then $(CYGPATH_W) 'h264_idct_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_idct_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_idct_spu.Po
#	source='h264_idct_spu.c' object='__top_builddir__spe_mbd-h264_idct_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_idct_spu.obj `if test -f 'h264_idct_spu.c'; then $(CYGPATH_W) 'h264_idct_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_idct_spu.c'; fi`

__top_builddir__spe_mbd-h264_mc_spu.o: h264_mc_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_mc_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Tpo -c -o __top_builddir__spe_mbd-h264_mc_spu.o `test -f 'h264_mc_spu.c' || echo '$(srcdir)/'`h264_mc_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Po
#	source='h264_mc_spu.c' object='__top_builddir__spe_mbd-h264_mc_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_mc_spu.o `test -f 'h264_mc_spu.c' || echo '$(srcdir)/'`h264_mc_spu.c

__top_builddir__spe_mbd-h264_mc_spu.obj: h264_mc_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_mc_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Tpo -c -o __top_builddir__spe_mbd-h264_mc_spu.obj `if test -f 'h264_mc_spu.c'; then $(CYGPATH_W) 'h264_mc_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_mc_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_mc_spu.Po
#	source='h264_mc_spu.c' object='__top_builddir__spe_mbd-h264_mc_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_mc_spu.obj `if test -f 'h264_mc_spu.c'; then $(CYGPATH_W) 'h264_mc_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_mc_spu.c'; fi`

__top_builddir__spe_mbd-h264_deblock_spu.o: h264_deblock_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_deblock_spu.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Tpo -c -o __top_builddir__spe_mbd-h264_deblock_spu.o `test -f 'h264_deblock_spu.c' || echo '$(srcdir)/'`h264_deblock_spu.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Po
#	source='h264_deblock_spu.c' object='__top_builddir__spe_mbd-h264_deblock_spu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_deblock_spu.o `test -f 'h264_deblock_spu.c' || echo '$(srcdir)/'`h264_deblock_spu.c

__top_builddir__spe_mbd-h264_deblock_spu.obj: h264_deblock_spu.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_deblock_spu.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Tpo -c -o __top_builddir__spe_mbd-h264_deblock_spu.obj `if test -f 'h264_deblock_spu.c'; then $(CYGPATH_W) 'h264_deblock_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_deblock_spu.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_deblock_spu.Po
#	source='h264_deblock_spu.c' object='__top_builddir__spe_mbd-h264_deblock_spu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_deblock_spu.obj `if test -f 'h264_deblock_spu.c'; then $(CYGPATH_W) 'h264_deblock_spu.c'; else $(CYGPATH_W) '$(srcdir)/h264_deblock_spu.c'; fi`

__top_builddir__spe_mbd-h264_dma.o: h264_dma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_dma.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Tpo -c -o __top_builddir__spe_mbd-h264_dma.o `test -f 'h264_dma.c' || echo '$(srcdir)/'`h264_dma.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Po
#	source='h264_dma.c' object='__top_builddir__spe_mbd-h264_dma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_dma.o `test -f 'h264_dma.c' || echo '$(srcdir)/'`h264_dma.c

__top_builddir__spe_mbd-h264_dma.obj: h264_dma.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_dma.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Tpo -c -o __top_builddir__spe_mbd-h264_dma.obj `if test -f 'h264_dma.c'; then $(CYGPATH_W) 'h264_dma.c'; else $(CYGPATH_W) '$(srcdir)/h264_dma.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_dma.Po
#	source='h264_dma.c' object='__top_builddir__spe_mbd-h264_dma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_dma.obj `if test -f 'h264_dma.c'; then $(CYGPATH_W) 'h264_dma.c'; else $(CYGPATH_W) '$(srcdir)/h264_dma.c'; fi`

__top_builddir__spe_mbd-h264_tables.o: h264_tables.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_tables.o -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Tpo -c -o __top_builddir__spe_mbd-h264_tables.o `test -f 'h264_tables.c' || echo '$(srcdir)/'`h264_tables.c
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Po
#	source='h264_tables.c' object='__top_builddir__spe_mbd-h264_tables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_tables.o `test -f 'h264_tables.c' || echo '$(srcdir)/'`h264_tables.c

__top_builddir__spe_mbd-h264_tables.obj: h264_tables.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT __top_builddir__spe_mbd-h264_tables.obj -MD -MP -MF $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Tpo -c -o __top_builddir__spe_mbd-h264_tables.obj `if test -f 'h264_tables.c'; then $(CYGPATH_W) 'h264_tables.c'; else $(CYGPATH_W) '$(srcdir)/h264_tables.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Tpo $(DEPDIR)/__top_builddir__spe_mbd-h264_tables.Po
#	source='h264_tables.c' object='__top_builddir__spe_mbd-h264_tables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__top_builddir__spe_mbd_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o __top_builddir__spe_mbd-h264_tables.obj `if test -f 'h264_tables.c'; then $(CYGPATH_W) 'h264_tables.c'; else $(CYGPATH_W) '$(srcdir)/h264_tables.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(top_builddir)/$(am__dirstamp)" || rm -f $(top_builddir)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
